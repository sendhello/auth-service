version: '3.8'

services:

  auth:
    container_name: auth
    hostname: auth
    build: auth_service
    environment:
      DEBUG: ${DEBUG}
      PROJECT_NAME: ${AUTH_PROJECT_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
      JAEGER_TRACE: ${JAEGER_TRACE}
      JAEGER_AGENT_HOST: ${JAEGER_AGENT_HOST}
      JAEGER_AGENT_PORT: ${JAEGER_AGENT_PORT}
      REQUEST_LIMIT_PER_MINUTE: ${REQUEST_LIMIT_PER_MINUTE}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    networks:
      - network
    expose:
      - "8000"
    depends_on:
      - redis
      - postgres

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:15.2
    networks:
      - network
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d auth" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    hostname: redis
    image: redis:7.2-rc1
    environment:
      ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD}
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    networks:
      - network

  jaeger:
    container_name: jaeger
    hostname: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - network

  mailhog:
    image: jcalonso/mailhog:latest
    expose:
      - "1025"
    ports:
      - "8025:8025"  # web ui
    networks:
      - network

volumes:
  pg_data:
  redis_data:

networks:
  network:
