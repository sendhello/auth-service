[project]
name = "auth-service"
version = "0.1.0"
description = ""
authors = [
    {name = "Ivan Bazhenov",email = "bazhenov.in@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"
package-mode = false
dependencies = [
    "fastapi (>=0.115.14,<0.116.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "redis (>=6.2.0,<7.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "greenlet (>=3.2.3,<4.0.0)",
    "sqlalchemy[postgres] (>=2.0.41,<3.0.0)",
    "alembic (>=1.16.2,<2.0.0)",
    "argon2-cffi (>=23.1.0,<24.0.0)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "google-auth (>=2.40.3,<3.0.0)",
    "google-auth-oauthlib (>=1.2.2,<2.0.0)",
    "google-api-python-client (>=2.174.0,<3.0.0)",
    "opentelemetry-instrumentation-fastapi (>=0.55b1,<0.56)",
    "opentelemetry-instrumentation-sqlalchemy (>=0.55b1,<0.56)",
    "opentelemetry-instrumentation-redis (>=0.55b1,<0.56)",
    "opentelemetry-instrumentation-requests (>=0.55b1,<0.56)",
    "opentelemetry-exporter-jaeger (>=1.21.0,<2.0.0)",
    "typer (>=0.16.0,<0.17.0)",
    "pydantic-extra-types (>=2.10.5,<3.0.0)",
    "pydantic[email] (>=2.11.7,<3.0.0)",
    "deprecated (>=1.2.18,<2.0.0)",
    "async-fastapi-jwt-auth (>=0.6.6,<0.7.0)"
]


[tool.poetry.group.linters.dependencies]
ruff = "^0.5.7"
mypy = "^1.11.2"
bandit = "^1.7.9"
black = "^24.8.0"

[tool.poetry.group.tests.dependencies]
orjson = "^3.10.18"
pytest = "^7.4.4"  # стабильная версия
pytest-asyncio = "^0.23.8"
pytest-mock = "^3.14.1"
pytest-cov = "^4.0.0"


[tool.ruff]
target-version = "py313"
line-length = 120
src = ["."]
exclude = [
  ".venv",
  "venv",
  "migrations",
]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "W",   # pycodestyle warnings
  "I",   # isort (imports)
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "SIM", # flake8-simplify
  "RET", # flake8-return
  "RUF", # Ruff rules
  "PL",  # Pylint-inspired rules
]
ignore = [
    "W191", # Tabs (use formatter to normalize)
    "B904",
    "B008",
    "PLR2004",
    "RUF012",
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["PLR2004"]  # Magic values allowed in tests

[tool.ruff.lint.pylint]
max-args = 20

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
  "fastapi.Depends",
  "fastapi.Security",
]



[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true

[tool.black]
line-length = 120
target-version = ["py313"]
include = '\.py$'
exclude = '''
/(
  \.venv
  |venv
  |migrations
)/
'''

[tool.mypy]
python_version = "3.13"
plugins = ["pydantic.mypy"]
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
no_implicit_optional = true
check_untyped_defs = true
show_error_codes = true
pretty = true
exclude = [
  "^migrations/",
  "^tests/",
]

[tool.bandit]
targets = ["."]
exclude_dirs = ["tests", "migrations", ".venv", "venv"]
skips = ["B101"]  # allow assert in tests

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
